# Setup

![Step 1 of a Lego instruction booklet: a single Lego piece](i/lego-step-one.png)

Ahh, step 1. Don't you love a fresh start on a blank slate? And then selecting
that singular brick onto which you will build your entire palatial estate?

Unfortunately, when you're building a *computer program*, step 1 can get...
complicated. And frustrating. You have to make sure your environment is set up
for the programming language you're using, and you have to figure out how to
compile and run your program in that environment.

Fortunately, the program we are building doesn't depend on any external
libraries, so you don't need anything beyond a C compiler and the standard
library it comes with. (We will also be using the `make` program.) To check
whether you have a C compiler installed, try running `cc --version` at the
command line (`cc` stands for "C Compiler"). To check whether you have `make`,
try running `make -v`.

## How to install a C compiler...

### ...in Windows

You will **need to install some kind of Linux environment within Windows**.
This is because our text editor interacts with the terminal at a low level
using the `<termios.h>` header, which isn't available on Windows. I suggest
using either
[Bash on Windows](https://msdn.microsoft.com/en-us/commandline/wsl/about) or
[Cygwin](https://www.cygwin.com/).

**Bash on Windows**: Only works on 64-bit Windows 10. See the
[installation guide](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide).
After installing it, run `bash` at the command line whenever you want to enter
the Linux environment. Inside `bash`, run `sudo apt-get install gcc make` to
install the GNU Compiler Collection and the `make` program. If `sudo` takes a
really long time to do anything, you may have to
[fix your /etc/hosts file](https://superuser.com/questions/1108197).

**Cygwin**: Download the installer from
[cygwin.com/install.html](https://cygwin.com/install.html). When the installer
asks you to select packages to install, look in the `devel` category and select
the `gcc-core` and `make` packages. To use Cygwin, you have to run the Cygwin
terminal program. Unlike Bash on Windows, in Cygwin your home directory is
separate from your Windows home directory. If you installed Cygwin to
`C:\cygwin64`, then your home directory is at `C:\cygwin64\home\yourname`. So
if you want to use a text editor outside of Cygwin to write your code, that's
where you'll want to save to.

### ...in macOS

When you try to run the `cc` command, a window should pop up asking if you want
to install the command line developer tools. You can also run
`xcode-select --install` to get this window to pop up. Then just click
"Install" and it will install a C compiler and `make`, among other things.

### ...in Linux

In Ubuntu, it's `sudo apt-get install gcc make`. Other distributions should
have `gcc` and `make` packages available as well.
